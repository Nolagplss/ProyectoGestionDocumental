<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls">
   
    

    <!-- ESTILOS -->


    <!-- Estilos HamburgerMenu -->
    <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type mah:HamburgerMenuGlyphItem}">
        <!-- Para mostrar correctamente el contenido utilizamos un Grid con dos columnas -->
        <Grid Height="48">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="48" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <!-- En este textblock se muestra el icono. Se utiliza la fuente Segoe -->
            <TextBlock Grid.Column="0"
                 FontSize="16"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center"
                 FontFamily="Segoe MDL2 Assets"
                 Foreground="Black"
                 Text="{Binding Glyph}" />
            <!-- En este segundo textbloc se muestra la etiqueta que vemos al desplegar el menu -->
            <TextBlock Grid.Column="1"
                 VerticalAlignment="Center"
                 FontSize="16"
                 Foreground="Black"
                 Text="{Binding Label}" />
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type mah:HamburgerMenuItem}">
        <Grid x:Name="TheContentGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="48" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Border Grid.Row="0"
                 >
                <TextBlock x:Name="Header"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         FontSize="24"
                         Foreground="Black"
                         Text="{Binding Label}" />
            </Border>
            <ContentControl x:Name="TheContent"
                         Grid.Row="1"
                         Focusable="False"
                         
                         Content="{Binding Tag}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="MenuItemTemplateIcon" DataType="{x:Type mah:HamburgerMenuIconItem}">
        <Grid Height="48">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="48" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <!-- Contenedor del ícono con tamaño reducido -->
            <Grid Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Viewbox Width="16" Height="16">
                    <!-- Tamaño más pequeño para los iconos -->
                    <Viewbox.Child>
                        <ContentControl Foreground="Black" Content="{Binding Path=Icon}" />
                    </Viewbox.Child>
                </Viewbox>
            </Grid>

            <!-- Texto del menú -->
            <TextBlock Grid.Column="1"
                Margin="10,0,0,0"
                VerticalAlignment="Center"
                FontSize="16"
                Foreground="White"
                Text="{Binding Label}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MenuItemTemplateImage" DataType="{x:Type mah:HamburgerMenuImageItem}">
        <Grid x:Name="RootGrid"
                   Height="48"
                   Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="48" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <ContentControl Grid.Column="0"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Focusable="False"
                                 Foreground="Black" >
                <Image Source="{Binding Path=Thumbnail}" Margin="8" />
            </ContentControl>
            <TextBlock Grid.Column="1"
                            VerticalAlignment="Center"
                            FontSize="16"
                            Foreground="White"
                            Text="{Binding Label}" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:HamburgerMenu}}, Path=IsPaneOpen}" Value="False">
                <Setter TargetName="RootGrid" Property="ToolTip" Value="{Binding ToolTip, Mode=OneWay}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <!--ESTILO BOTON HAMBURGER-->
    <Style x:Key="CustomHamburgerButtonStyle" TargetType="Button" 
        BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <!-- Color del ícono -->
        <Setter Property="Background" Value="Transparent" />
    </Style>


    <!-- Estilo para el Border con sombra -->
    <Style x:Key="BorderConSombra" TargetType="Border">
        <Setter Property="Opacity" Value="0.1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    Color="Black"
                    Direction="180"
                    ShadowDepth="2"
                    BlurRadius="20"
                    Opacity="0.2"/>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Estilo para el Border con desenfoque -->
    <Style x:Key="BorderConDesenfoque" TargetType="Border">
        <Setter Property="Opacity" Value="0.85"/>
        <Setter Property="Effect">
            <Setter.Value>
                <BlurEffect Radius="2"/>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- Estilos para las celdas -->
    <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
        <Setter Property="Padding" Value="4,8"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!-- Color de fondo al estar seleccionado -->
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#57CBBE" />
                <!-- Azul claro -->
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="BorderBrush" Value="#57CBBE" />
            </Trigger>
        </Style.Triggers>
    </Style>





    <!-- Estilos para los encabezados de las columnas -->
    <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#00796B"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="4,8"/>
    </Style>

    <!-- Estilo para el DataGrid -->
    <Style x:Key="CustomDataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#E0E0E0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowBackground" Value="#FAFAFA" />
        <Setter Property="AlternatingRowBackground" Value="#F5F5F5" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <!-- Personalización de colores de selección -->
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#B3E5FC" />
                            <!-- Azul claro -->
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollBar" x:Key="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid x:Name="Root" Background="Transparent">
                        <Track x:Name="PART_Track" IsDirectionReversed="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="#AAAAAA" BorderBrush="Transparent">
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Thumb">
                                                        <Border x:Name="ThumbBorder" 
                                                            Background="{TemplateBinding Background}" 
                                                            CornerRadius="4"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#666666"/>
                                                </Trigger>
                                                <Trigger Property="IsDragging" Value="True">
                                                    <Setter Property="Background" Value="#555555"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>

                
                    <ControlTemplate.Triggers>
                    
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Root" Property="Width" Value="8"/>
                            <Setter TargetName="Thumb" Property="Width" Value="8"/>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>
                            <Setter TargetName="PART_Track" Property="IsDirectionReversed" Value="True"/>
                        </Trigger>

                      
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="Root" Property="Height" Value="8"/>
                            <Setter TargetName="Thumb" Property="Height" Value="8"/>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
                            <Setter TargetName="PART_Track" Property="IsDirectionReversed" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderBrush" Value="#00796B"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder/>
                        </Border>
                        <TextBlock 
                             Text="{Binding [0].ErrorContent}" 
                             Foreground="Red" 
                             Margin="5,0"
                             FontSize="12"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" 
                         Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderBrush" Value="#00796B"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder/>
                        </Border>
                        <TextBlock 
                      Text="{Binding [0].ErrorContent}" 
                      Foreground="Red" 
                      Margin="5,0"
                      FontSize="12"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" 
                  Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="DatePickerStyle" TargetType="DatePicker">
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderBrush" Value="#00796B"/>
        <Setter Property="Background" Value="White"/>
    </Style>

    <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="#1d4355"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
    </Style>
    <!-- Estilo border con sombra -->
    <Style x:Key="BorderWithShadow" TargetType="Border">

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect 
          Color="Gray" 
          Direction="270" 
          ShadowDepth="3" 
          BlurRadius="10" 
          Opacity="0.2"/>
            </Setter.Value>
        </Setter>

    </Style>

  

    <Style x:Key="SectionHeaderStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="#1d4355"/>
        <Setter Property="Margin" Value="0,20,0,15"/>
    </Style>

    <Style x:Key="LabelStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="#1d4355"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
    </Style>



    <Style x:Key="BotonPaginacion" TargetType="Button">
        <Setter Property="Background" Value="#00796B"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}">
                        <StackPanel Orientation="Horizontal" 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center">
                           
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#4DB6AC"/>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="#00796B" 
                                                      Direction="270" 
                                                      ShadowDepth="2" 
                                                      BlurRadius="8" 
                                                      Opacity="0.3"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#004D40"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#CCCCCC"/>
                            <Setter Property="Foreground" Value="#666666"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>